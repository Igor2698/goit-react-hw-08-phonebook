{"version":3,"file":"static/js/749.6205d173.chunk.js","mappings":"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","sources":["components/Form/Form.styled.js","components/Form/Form.jsx","components/Filter/Filter.styled.js","redux/filterSlice.js","components/Filter/Filter.jsx","components/ContactsList/ContactsList.styled.js","webpack://goit-react-hw-08-phonebook/./src/components/EditModal/EditModal.module.css?4592","components/EditModal/Modal.jsx","components/ContactsList/ConctactsList.jsx","pages/Contacts.jsx"],"sourcesContent":["import { Form, Field, ErrorMessage } from 'formik';\nimport styled, { keyframes } from 'styled-components'\n\nconst blinkingAnimation = keyframes`\n  0% { color: rgb(0, 255, 200);; }\n  50% { color: white; }\n  100% { color: rgb(0, 255, 200);; }\n`;\n\n\n\nexport const StyledForm = styled(Form)`\npadding: 50px;\nmargin: 0 auto;\ndisplay: flex;\n  flex-direction: column;\n  gap: 30px;\n  align-items: center;\n  background: transparent;\n    border: 2px solid rgba(255, 255, 255, 0.5);\n    backdrop-filter: blur(15px);\n    border-radius: 20px;\n    width: 50%;\n    \n    justify-content: center;\n}\n`;\n\nexport const StyledField = styled(Field)`\npadding: 10px 10px 0 10px;\nfont-size: 16px;\ncolor: white;\nappearance: none;\n\n\ntransition: border-color 0.3s ease;\nwidth: 400px;\nheight: 55px;\nbackground: rgba(0, 0, 0, 0.15);\nbox-shadow: rgba(0, 0, 0, 0.3) 0px -1px 0px inset;\ntransition: all 0.15s ease 0s;\n\n\n@media screen and (max-width: 768px) {\n     \n      width: 250px;\n    \n  }\n\n  &:focus {\n    \n    outline: none;\n    outline-offset: -2px; /* Отрицательный отступ сверху для скрытия верхнего outline */\n    box-shadow: rgb(42, 157, 143) 0px -2px 0px inset;\n  }\n\n\n\n\n\n\n`;\n\nexport const Label = styled.label`\nposition: absolute;\ntop: 22px;\nleft: 10px;\ntransition: transform 0.3s, font-size 0.3s, color 0.3s;\npointer-events: none;\ncolor: white;\nz-index: 1;\nbackground: transparent;\n\n\n\n\n${StyledField}:focus + &, \n${StyledField}:not(:placeholder-shown) + & {\n \n\n  background: transparent;\n  transform: scale(0.8) translateY(-130%) translateX(-18%);\n \n \n  \n\n  font-size: 18px;\n  color: rgb(0, 255, 200);\n}\n\n\n\n`;\n\nexport const ErrorMsg = styled(ErrorMessage)`\n\n  font-size: 14px;\n  animation: ${blinkingAnimation} 1s linear infinite;\n  margin-top: 10px;\n  \n  pointer-events: none;\n`;\n\nexport const InputContainer = styled.div`\nposition: relative;\n`\n\n\nexport const ButtonForm = styled.button`\n    font-size: 25px;\n    padding: 10px 15px;\n    background-color: #00ff00;\n    color: white;\n    border: none;\n    border-radius: 15px;\n    cursor: pointer;\n    transition: background-color 0.3s ease, color 0.3s ease;\n    width: 320px;\n\n    @media screen and (max-width: 768px) {\n     \n      font-size: 18px;\n      width: 150px;\n    \n  }\n\n\n    &:active {\n        background-color: black;\n    }\n\n\n    `\n\n","import React from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { selectAllContacts } from 'redux/contacts/selectors';\nimport { addContacts } from 'redux/contacts/operations';\nimport { selectModalIsOpen } from 'redux/contacts/selectors';\n\nimport {\n  StyledForm,\n  Label,\n  StyledField,\n  ErrorMsg,\n  InputContainer,\n  ButtonForm,\n} from './Form.styled';\n\nconst formSchema = Yup.object().shape({\n  name: Yup.string()\n    .matches(/^[a-zA-Z\\s]+$/, 'Only letters are allowed')\n    .min(3, 'Too Short!')\n    .required('This field is required, please fill that'),\n  number: Yup.string()\n    .matches(/^\\d+$/, 'Must be only numbers')\n    .required('This field is required, please fill that'),\n});\n\nconst MyForm = () => {\n  const modal = useSelector(selectModalIsOpen);\n  const contacts = useSelector(selectAllContacts);\n  const dispatch = useDispatch();\n\n  return (\n    !modal && (\n      <Formik\n        initialValues={{\n          name: '',\n          number: '',\n        }}\n        validationSchema={formSchema}\n        onSubmit={(values, actions) => {\n          const { name, number } = values;\n          if (\n            contacts.find(\n              contact =>\n                contact.name.toLowerCase() === name.toLowerCase() ||\n                contact.number === number\n            )\n          ) {\n            return alert('Phonebook already has this values');\n          }\n\n          dispatch(addContacts({ name, number }));\n          actions.resetForm();\n        }}\n      >\n        <StyledForm>\n          <InputContainer>\n            <StyledField type=\"text\" name=\"name\" placeholder=\" \" />\n            <Label htmlFor=\"name\">Please enter name:</Label>\n\n            <ErrorMsg name=\"name\" component=\"div\" />\n          </InputContainer>\n          <InputContainer>\n            <StyledField type=\"tel\" name=\"number\" placeholder=\" \" />\n            <Label htmlFor=\"number\">Please enter number:</Label>\n\n            <ErrorMsg name=\"number\" component=\"div\" />\n          </InputContainer>\n\n          <ButtonForm type=\"submit\">Add contact</ButtonForm>\n        </StyledForm>\n      </Formik>\n    )\n  );\n};\n\nexport default MyForm;\n","import { styled } from \"styled-components\"\n\nexport const CenterContainer = styled.div`\n\ndisplay: flex;\njustify-content: center;\nflex-direction: column;\nalign-items: center;\nmargin-top: 40px;`\n\nexport const FilterTitile = styled.h2`text-align: center;\nmargin-bottom: 35px;`\n\nexport const ContFilter = styled.div` position: relative;\nmargin-bottom: 15px;`\n\nexport const FilterPlaceholder = styled.label` position: absolute;\ntop: 10px;\nleft: 5px;\ndisplay: flex;\nflex-direction: column;\nmargin-bottom: 10px;\ngap: 15px;\nfont-size: 16px;\ncolor: white;\ntext-align: center;\ntransition: transform 0.3s, font-size 0.3s, color 0.3s;\npointer-events: none;`\n\n\n\n\n\nexport const FilterInput = styled.input`height: 30px;\nborder-radius:10px;\ncolor: white;\nbackground: rgba(0, 0, 0, 0.15);\npadding: 5px;\n    box-shadow: rgba(0, 0, 0, 0.3) 0px -1px 0px inset;\n\n@media screen and (min-width: 768px) {\n    & {\n      width: 500px;\n    }\n  }\n\n&:focus + ${FilterPlaceholder}, &:not(:placeholder-shown) + ${FilterPlaceholder}{\n    transform: translateY(-160%);\n    font-size: 16px;\n    color: rgb(0, 255, 200);;\n}\n\nfont-size: 18px;`\n\n\n","import { createSlice } from '@reduxjs/toolkit';\n\n\nexport const filterSlice = createSlice({\n    name: 'filter',\n    initialState: '',\n    reducers: {\n        setFilter(state, action) {\n            return action.payload;\n        },\n    }\n})\n\n\nexport const { setFilter } = filterSlice.actions","import {\n  CenterContainer,\n  ContFilter,\n  FilterInput,\n  FilterPlaceholder,\n} from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/filterSlice';\nimport { selectModalIsOpen } from 'redux/contacts/selectors';\n\nconst Filter = () => {\n  const modal = useSelector(selectModalIsOpen);\n  const dispatch = useDispatch();\n\n  const handeChangeFilter = e => {\n    dispatch(setFilter(e.currentTarget.value));\n  };\n\n  return (\n    !modal && (\n      <CenterContainer>\n        <ContFilter>\n          <FilterInput\n            placeholder=\" \"\n            type=\"text\"\n            name=\"filter\"\n            onChange={handeChangeFilter}\n          />\n          <FilterPlaceholder htmlFor=\"filter\">Find contact</FilterPlaceholder>\n        </ContFilter>\n      </CenterContainer>\n    )\n  );\n};\n\nexport default Filter;\n","import styled, { css } from 'styled-components';\n\n\nexport const ContContactList = styled.div`\n\npadding: 20px;\nborder-radius: 10px;\nbox-shadow: 0px 0px 20px rgba(0, 0, 0, 0.6);\nbackdrop-filter: blur(15px);`\n\n\nexport const ContListUl = styled.ul`  list-style: none;\n padding: 0;`\n\nexport const ContListItem = styled.li`\nmargin-bottom: 15px;\npadding: 10px 25px;\nborder: 1px solid #444;\nborder-radius: 5px;\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\ngap: 15px;\n\n${(props) =>\n    props.modalOpen &&\n    css`\n    opacity: 0.4;\n    pointer-events: none;\n  `}\n\n\n`\n\n\nexport const ContListText = styled.p`    \ncolor: #fff;\nfont-size: 18px;\n\nspan.number {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n\nmargin: 0;\n@media screen and (max-width: 768px) {\n    font-size: 14px;}\n\n`\n\n\nexport const ContListBtn = styled.button`\n\n\n\n   display: flex;\n\n\n     background: rgb(0, 255, 200);\n    justify-content: center;\n    align-items: center;\n    padding: 5px 10px;\n    border-radius: 40px;\n  \n    border: none;\n    outline: none;\n    cursor: pointer;\n    transition: background 500ms ease-in-out 0s, color 250ms ease-in-out 0s;\n  \n  &:hover {\n    color: white;\n    background: rgb(209, 36, 47);\n  }\n\n`\n\n\n\n\n\nexport const NoContactsText = styled.p`\n\nborder: 2px solid rgba(255, 255, 255, 0.5);\nbackdrop-filter: blur(15px);\nwidth: 30%;\npadding: 10px;\nborder-radius: 15px;\ntext-align: center;\nmargin: 0 auto;\ncolor: rgb(0, 255, 200);\n\n`\n\n\nexport const NoFilteredText = styled.p`\ncolor: rgb(0, 255, 200);\n\nborder: 2px solid rgba(255, 255, 255, 0.5);\nbackdrop-filter: blur(15px);\nwidth: 30%;\npadding: 10px;\nborder-radius: 15px;\ntext-align: center;\nmargin: 0 auto;\n\n`\n\n\nexport const SvgContainer = styled.div`\ndisplay: flex;\ngap: 15px;\n`\n\nconst additionalStyles = `\ntransition: all 500ms ease;\n\n&:hover {\n  color: black;\n  background: yellow;\n}\n`;\n\n\n\nexport const EditButton = styled(ContListBtn)`\n${additionalStyles}\n\n\n`\n\nconst stylesItem = `\nbackground-color: black;\n`\n\n\nexport const EdditItem = styled(ContListItem)`\n${stylesItem}\n`\n\n\n\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"modalForm\":\"EditModal_modalForm__nz5UV\",\"inputForm\":\"EditModal_inputForm__FpmK8\",\"modalButton\":\"EditModal_modalButton__dCruY\",\"buttonsContainer\":\"EditModal_buttonsContainer__FRcEM\",\"editButton\":\"EditModal_editButton__It3aX\"};","import { useState } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectUpdateContactDate } from 'redux/contacts/selectors';\nimport { editContact, closeModal } from 'redux/contacts/operations';\nimport css from './EditModal.module.css';\n\nexport const EditModal = () => {\n  const dates = useSelector(selectUpdateContactDate);\n  console.log(dates);\n  const { id, name: nameDates, number: numberDates } = dates;\n\n  const [name, setName] = useState(nameDates);\n  const [number, setNumber] = useState(numberDates);\n  const dispatch = useDispatch();\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    dispatch(editContact({ id, name, number }));\n\n    // const newContact = { name, number, id };\n\n    // console.log(newContact);\n    // if (newContact.name.trim() === '') {\n    //   return alert('Enter your name');\n    // }\n\n    // dispatch(updateContact(newContact));\n    // reset();\n  };\n\n  const handleInputChange = e => {\n    const { name, value } = e.currentTarget;\n\n    if (name === 'name') {\n      setName(value);\n    } else {\n      setNumber(value);\n    }\n  };\n\n  return (\n    <form className={css.modalForm} onSubmit={onSubmit}>\n      <input\n        className={css.inputForm}\n        onChange={handleInputChange}\n        type=\"text\"\n        name=\"name\"\n        // pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        // title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        value={name}\n        required\n      />\n      <input\n        className={css.inputForm}\n        onChange={handleInputChange}\n        type=\"tel\"\n        name=\"number\"\n        placeholder=\"Enter changed phone\"\n        pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n        title=\"Phone phone must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        value={number}\n        required\n      />\n      <div className={css.buttonsContainer}>\n        <button\n          className={`${css.modalButton}  ${css.editButton}`}\n          type=\"submit\"\n        >\n          Edit contact\n        </button>\n        <button\n          className={css.modalButton}\n          onClick={() => {\n            dispatch(closeModal());\n          }}\n          type=\"button\"\n        >\n          Cancel\n        </button>\n      </div>\n    </form>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  ContContactList,\n  ContListUl,\n  ContListText,\n  ContListItem,\n  ContListBtn,\n  NoContactsText,\n  NoFilteredText,\n  SvgContainer,\n  EditButton,\n} from './ContactsList.styled';\nimport {\n  selectVisibleContacts,\n  selectAllContacts,\n  selectModalIsOpen,\n} from 'redux/contacts/selectors';\n\nimport { deleteContact, openModal } from 'redux/contacts/operations';\n\nimport { IoInformationCircleOutline } from 'react-icons/io5';\n\nimport { AiOutlineDelete } from 'react-icons/ai';\nimport { EditModal } from 'components/EditModal/Modal';\nimport styled from 'styled-components';\n\nexport const StyledDeleteIcon = styled(AiOutlineDelete)`\n  font-size: 18px;\n  width: 20px;\n\n  height: 22px;\n\n  // &:hover {\n  //   color: white;\n  // }\n`;\n\nexport const StyledChangeIcon = styled(IoInformationCircleOutline)`\n  width: 20px;\n  height: 22px;\n\n  // &:hover {\n  //   color: white;\n  // }\n`;\n\nconst ContactsList = () => {\n  const allContacts = useSelector(selectAllContacts);\n  const modal = useSelector(selectModalIsOpen);\n\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  const dispatch = useDispatch();\n\n  const handleOnClick = ({ id, name, number }) => {\n    dispatch(openModal({ id, name, number }));\n  };\n\n  return (\n    <>\n      {modal && <EditModal />}\n      {allContacts.length === 0 && (\n        <NoContactsText>\n          There are no any contacts yet. Please add a contact by clicking the\n          \"Add contact\" button.\n        </NoContactsText>\n      )}\n\n      {allContacts.length > 0 && visibleContacts.length === 0 && (\n        <NoFilteredText>No one found with that name</NoFilteredText>\n      )}\n\n      {visibleContacts.length > 0 && (\n        <ContContactList>\n          <>\n            <ContListUl>\n              {visibleContacts.map(({ id, name, number }) => (\n                <ContListItem modalopen={modal} key={id}>\n                  <ContListText>\n                    {name}: <span className=\"number\"> {number}</span>\n                  </ContListText>\n                  <SvgContainer>\n                    <EditButton\n                      className=\"editButton\"\n                      type=\"button\"\n                      onClick={() => handleOnClick({ id, name, number })}\n                    >\n                      <StyledChangeIcon />\n                    </EditButton>\n\n                    <ContListBtn\n                      type=\"button\"\n                      onClick={() => dispatch(deleteContact(id))}\n                    >\n                      <StyledDeleteIcon />\n                    </ContListBtn>\n                  </SvgContainer>\n                </ContListItem>\n              ))}\n            </ContListUl>\n          </>\n        </ContContactList>\n      )}\n    </>\n  );\n};\n\nexport default ContactsList;\n","import Section from '../components/Section';\nimport { useDispatch } from 'react-redux';\n\nimport Form from '../components/Form';\nimport Filter from '../components/Filter';\nimport ContactsList from '../components/ContactsList';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { useSelector } from 'react-redux';\nimport { selectLoading } from 'redux/contacts/selectors';\nimport { Loader } from 'components/Grid';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  const loading = useSelector(selectLoading);\n\n  return (\n    <>\n      <Section>\n        <Form />\n        <Filter />\n        {loading && Loader}\n        <ContactsList />\n      </Section>\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["blinkingAnimation","keyframes","_templateObject","_taggedTemplateLiteral","StyledForm","styled","Form","_templateObject2","StyledField","Field","_templateObject3","Label","_templateObject4","ErrorMsg","ErrorMessage","_templateObject5","InputContainer","_templateObject6","ButtonForm","_templateObject7","formSchema","Yup","shape","name","matches","min","required","number","modal","useSelector","selectModalIsOpen","contacts","selectAllContacts","dispatch","useDispatch","_jsx","Formik","initialValues","validationSchema","onSubmit","values","actions","find","contact","toLowerCase","alert","addContacts","resetForm","children","_jsxs","type","placeholder","htmlFor","component","CenterContainer","ContFilter","FilterPlaceholder","FilterInput","setFilter","createSlice","initialState","reducers","state","action","payload","onChange","e","currentTarget","value","ContContactList","ContListUl","ContListItem","props","modalOpen","css","ContListText","ContListBtn","NoContactsText","NoFilteredText","_templateObject8","SvgContainer","_templateObject9","EditButton","_templateObject10","_templateObject11","EditModal","dates","selectUpdateContactDate","console","log","id","nameDates","numberDates","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","setNumber","handleInputChange","_e$currentTarget","className","preventDefault","editContact","pattern","title","concat","onClick","closeModal","StyledDeleteIcon","AiOutlineDelete","StyledChangeIcon","IoInformationCircleOutline","allContacts","visibleContacts","selectVisibleContacts","_Fragment","length","map","_ref2","modalopen","_ref","openModal","handleOnClick","deleteContact","useEffect","fetchContacts","loading","selectLoading","Section","Filter","Loader","ContactsList"],"sourceRoot":""}